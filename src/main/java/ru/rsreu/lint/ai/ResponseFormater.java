package ru.rsreu.lint.ai;

public class ResponseFormater {

    public static String formatGigaChatResponse(String rawResponse) {
        if (rawResponse == null || rawResponse.isEmpty()) {
            return "–ù–µ –ø–æ–ª—É—á–µ–Ω —Ä–µ–∑—É–ª—å—Ç–∞—Ç –æ—Ç –ò–ò.";
        }

        try {
            // 1. –£–±–∏—Ä–∞–µ–º –ø—Ä–µ—Ñ–∏–∫—Å—ã –≤—Ä–æ–¥–µ "content="
            String content = rawResponse;
            if (content.contains("content=")) {
                content = content.substring(content.indexOf("content=") + 8);
            }

            // 2. –£–±–∏—Ä–∞–µ–º –≤—Å—ë –ø–æ—Å–ª–µ "object=..." –∏–ª–∏ "created=..."
            if (content.contains(", created")) {
                content = content.substring(0, content.indexOf(", created"));
            } else if (content.contains(", object")) {
                content = content.substring(0, content.indexOf(", object"));
            }

            // 3. –£–¥–∞–ª—è–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ/–∫–æ–Ω–µ—á–Ω—ã–µ –ø—Ä–æ–±–µ–ª—ã
            content = content.trim();

            // 4. –£–±–∏—Ä–∞–µ–º –æ–±—Ä–∞—Ç–Ω—ã–µ –∫–∞–≤—ã—á–∫–∏ –∏ —É–∫–∞–∑–∞–Ω–∏–µ —è–∑—ã–∫–∞ (``ruby, ``python –∏ —Ç.–ø.)
            content = content.replaceAll("```\\w+\n", "```\n");
            content = content.replace("```", "``````");

            // 5. –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–¥–ø–∏—Å—å
            return """
                    üß† –û—Ç–≤–µ—Ç –ò–ò:
                    
                    %s
                    
                    """.formatted(content);

        } catch (Exception e) {
            return """
                    ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –æ—Ç–≤–µ—Ç –ò–ò.
                    –ü–æ–ª—É—á–µ–Ω–æ:
                    
                    %s
                    """.formatted(rawResponse);
        }
    }
}
